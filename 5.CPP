#include <iostream>
#include <vector>
#include <unordered_map>
#include <random>

using namespace std;

int main() {
	setlocale(LC_ALL,"Russian");
    // Объявляем переменные для начального значения, множителя, инкрементирующего значения и диапазона
    int X0, A, B, C;
    // Считываем значения из стандартного ввода
    cin >> X0 >> A >> B >> C;

    // Создаем вектор для хранения последовательности чисел
    vector<int> sequence;
    // Создаем ассоциативный массив для отслеживания уже встреченных чисел и их индексов
    unordered_map<int, int> seen;

    // Инициализируем генератор случайных чисел minstd_rand начальным значением X0
    minstd_rand generator(X0);

    // Инициализируем текущее значение последовательности
    int current = X0;
    // Инициализируем индекс текущего элемента
    int index = 0;

    // Генерируем последовательность чисел до тех пор, пока не найдем повторяющееся число
    while (true) {
        // Добавляем текущее число в последовательность
        sequence.push_back(current);

        // Проверяем, не встречалось ли текущее число раньше
        if (seen.find(current) != seen.end()) {
            // Если встречалось, выводим индекс начала повторения и выходим из цикла
            cout << "Начало повторения: " << seen[current] << endl;
            break;
        }

        // Отмечаем, что число встретилось в последовательности с текущим индексом
        seen[current] = index;

        // Генерируем следующее число в последовательности
        current = (A * current + B) % C;

        // Увеличиваем индекс на единицу
        index++;
    }

    // Выводим сгенерированную последовательность чисел
    for (int num : sequence) {
        cout << num << " ";
    }
    cout << endl;

    return 0;
}